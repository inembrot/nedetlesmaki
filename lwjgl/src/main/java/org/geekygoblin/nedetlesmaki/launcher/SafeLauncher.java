/*
 The MIT License (MIT)

 Copyright (c) 2013 devnewton <devnewton@bci.im>

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
 */
package org.geekygoblin.nedetlesmaki.launcher;

import java.awt.DisplayMode;
import java.awt.GraphicsEnvironment;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.geekygoblin.nedetlesmaki.game.NormalLauncher;

/**
 *
 * @author devnewton <devnewton@bci.im>
 */
public class SafeLauncher extends javax.swing.JDialog {

    private static boolean launchMe;

    /**
     * Creates new form LauncherDialog
     */
    public SafeLauncher(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        GraphicsEnvironment graphicsenvironment = GraphicsEnvironment.getLocalGraphicsEnvironment();
        for (DisplayMode displayMode : graphicsenvironment.getDefaultScreenDevice().getDisplayModes()) {
            final LauncherDisplayMode item = new LauncherDisplayMode(displayMode);
            this.jComboBoxStandardVideoModeList.addItem(item);
        }
        DisplayMode currentDisplayMode = graphicsenvironment.getDefaultScreenDevice().getDisplayMode();
        this.jSpinnerCustomVideoModeWidth.setValue(currentDisplayMode.getWidth());
        this.jSpinnerCustomVideoModeHeight.setValue(currentDisplayMode.getHeight());
        this.jSpinnerCustomVideoModeColorDepth.setValue(currentDisplayMode.getBitDepth());
        this.jSpinnerCustomVideoFrequency.setValue(currentDisplayMode.getRefreshRate());
        jComboBoxStandardVideoModeList.setSelectedItem(new LauncherDisplayMode(currentDisplayMode));
        
        this.revalidate();
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupVideoMode = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jRadioButtonCustomVideoMode = new javax.swing.JRadioButton();
        jButtonLaunch = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxStandardVideoModeList = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jCheckBoxStandardVideoModeFullscreen = new javax.swing.JCheckBox();
        jRadioButtonStandardVideoMode = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerCustomVideoModeWidth = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerCustomVideoModeHeight = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerCustomVideoModeColorDepth = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerCustomVideoFrequency = new javax.swing.JSpinner();
        jCheckBoxCustomVideoModeFullscreen = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ned et les mak safe launcher");
        setMinimumSize(new java.awt.Dimension(300, 245));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Video mode"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        buttonGroupVideoMode.add(jRadioButtonCustomVideoMode);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jRadioButtonCustomVideoMode, gridBagConstraints);

        jButtonLaunch.setText("Launch");
        jButtonLaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLaunchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(jButtonLaunch, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Standard"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jComboBoxStandardVideoModeList, gridBagConstraints);

        jLabel5.setText("Mode:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel5, gridBagConstraints);

        jCheckBoxStandardVideoModeFullscreen.setText("Fullscreen?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel1.add(jCheckBoxStandardVideoModeFullscreen, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel2.add(jPanel1, gridBagConstraints);

        buttonGroupVideoMode.add(jRadioButtonStandardVideoMode);
        jRadioButtonStandardVideoMode.setSelected(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jRadioButtonStandardVideoMode, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Custom"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Width:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jSpinnerCustomVideoModeWidth, gridBagConstraints);

        jLabel3.setText("Height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jSpinnerCustomVideoModeHeight, gridBagConstraints);

        jLabel4.setText("Color depth:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jSpinnerCustomVideoModeColorDepth, gridBagConstraints);

        jLabel6.setText("Frequency:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel3.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jSpinnerCustomVideoFrequency, gridBagConstraints);

        jCheckBoxCustomVideoModeFullscreen.setText("Fullscreen?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        jPanel3.add(jCheckBoxCustomVideoModeFullscreen, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.1;
        gridBagConstraints.weighty = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(8, 10, 8, 10);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLaunchActionPerformed
        setVisible(false);
        if (jRadioButtonStandardVideoMode.isSelected()) {
            LauncherDisplayMode item = (LauncherDisplayMode) jComboBoxStandardVideoModeList.getSelectedItem();
            if (null != item) {
                System.setProperty("nedetlesmaki.video.width", String.valueOf(item.getDisplayMode().getWidth()));
                System.setProperty("nedetlesmaki.video.height", String.valueOf(item.getDisplayMode().getHeight()));
                System.setProperty("nedetlesmaki.video.fullscreen", String.valueOf(jCheckBoxStandardVideoModeFullscreen.isSelected()));
                this.launchMe = true;
            }
        } else if (jRadioButtonCustomVideoMode.isSelected() && null != jSpinnerCustomVideoModeWidth.getValue() && null != jSpinnerCustomVideoModeHeight.getValue()) {
            System.setProperty("nedetlesmaki.video.width", String.valueOf(jSpinnerCustomVideoModeWidth.getValue()));
            System.setProperty("nedetlesmaki.video.height", String.valueOf(jSpinnerCustomVideoModeHeight.getValue()));
            System.setProperty("nedetlesmaki.video.fullscreen", String.valueOf(jCheckBoxStandardVideoModeFullscreen.isSelected()));
            this.launchMe = true;
        }

    }//GEN-LAST:event_jButtonLaunchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void launch(String args[]) throws InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SafeLauncher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SafeLauncher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SafeLauncher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SafeLauncher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                SafeLauncher dialog = new SafeLauncher(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
        while (!launchMe) {
            Thread.sleep(1000);
        }
        try {
            NormalLauncher.launch(args);
        } catch (Exception ex) {
            Logger.getLogger(SafeLauncher.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            System.exit(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupVideoMode;
    private javax.swing.JButton jButtonLaunch;
    private javax.swing.JCheckBox jCheckBoxCustomVideoModeFullscreen;
    private javax.swing.JCheckBox jCheckBoxStandardVideoModeFullscreen;
    private javax.swing.JComboBox jComboBoxStandardVideoModeList;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonCustomVideoMode;
    private javax.swing.JRadioButton jRadioButtonStandardVideoMode;
    private javax.swing.JSpinner jSpinnerCustomVideoFrequency;
    private javax.swing.JSpinner jSpinnerCustomVideoModeColorDepth;
    private javax.swing.JSpinner jSpinnerCustomVideoModeHeight;
    private javax.swing.JSpinner jSpinnerCustomVideoModeWidth;
    // End of variables declaration//GEN-END:variables
}
